                                   app(authenticate, cart)

productall         login                  productDetail(productDetail)      cart
authenticate       id,pasw                authenticate                      props.cart
                   authenticate           productDetail
						                              장바구니 추가(cart=[item]) 
authenticate state는 모든 파일에서 사용되는데 자식 컴포넌트끼리는 공유를 못함
무조건 app에서 authenticate를 만들어서 자식에게 props로 전해주게 state를 적용시킴
리액트는 단방향 통신이라 이게 상당히 불편하다
productDetail페이지의 cart도 바로 cart페이지로 못넘겨주기 떄문에 app에서 또 cart state를
만들고 두개의 페이지에 전달해줘야 하는 불편함이 있다. app에도 state가 굉장히 많이 쌓일것

그래서 리덕스를 사용해야한다.
redux는 store이다 저장소이다. 어떠한 state를 저장해주는 저장소 역할.

=> 이런느낌
app()						store(authenticate, cart)

productall           login             productDetail(productDetail)               cart
authenticate         id,pasw           authenticate                             props.cart
                     authenticate      productDetail
						                             장바구니 추가(cart=[item]) 

근데 component   =>x    store 이것처럼 컴포넌트가 state로 다이렉트로 요청하지 못함 즉 바로
store에서 값을 가져오지 못함

Component ->(useDispatch) Action ->Reducer ->Store
      ↓                                        ↓  
      ----------------------useSelector---------
component가 어떤 action행동을 던짐 예로 상품정보 가져오기 그러면 그 행동이 reducer로 가서
reducer(함수)라고 보면 됨 => reducer가 행동지침에 따라서 store에 업데이트
reducer은 많은 작업 지시들이 있음 행동지침 case를 가지고 있음 여기서는 
로그인은 
case "로그인하기"
  return {id : useid, password : userPassWord, authenticate:true} 이렇게
action : "로그인하기" => reducer=""
store는 객체 타입 => state를 가지고 있는 객체느낌
reducer의 값에 따라 store에 값이 바뀌겟지 그러면 store값이 바뀌면 component값도 바뀌는것
react hook = useDispatch = 액션을 던지는 훅 혹은 함수
               = useSelector 컴포넌트에서 store에 있는 값을 가져다 쓸 때 useSelector 사용

redux, react - redux 설치

provider는 store를 app에 적용되게 해주는 것이 provider라는 컴포넌트이다.